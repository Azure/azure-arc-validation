# Azure arc conformance test properties file
# Please maintain the structure of the file
# Do not add inline comments

# configure Azure storage where result will be uploaded
# name of your storage account (will be provided)
az-storage-account=
# sas token for your storage account, please add it within the quotes (will be provided)
az-storage-account-sas=
# name of the partner offering; use this variable to distinguish between the results tar for different offerings
offering-name=

# plugins configuration
# global configuration will be added to all plugins which are enable
global.SUBSCRIPTION_ID=
global.TENANT_ID=
global.RESOURCE_GROUP=
global.CLUSTER_NAME=
global.CLIENT_ID=
global.CLIENT_SECRET=

# azure-arc-platform plugin configurations
azure-arc-platform.enable=
azure-arc-platform.LOCATION=
azure-arc-platform.OBJECT_ID=
# In case your cluster is behind an outbound proxy, please add the following variables
#azure-arc-platform.HTTPS_PROXY="http://<proxy ip>:<proxy port>"
#azure-arc-platform.HTTP_PROXY="http://<proxy ip>:<proxy port>"
#azure-arc-platform.NO_PROXY="kubernetes.default.svc,<ip CIDR etc>"

# In case your outbound proxy is setup with certificate authentication, follow the below steps:
# Create a Kubernetes generic secret with the name sonobuoy-proxy-cert with key proxycert in any namespace:
# kubectl create secret generic sonobuoy-proxy-cert --from-file=proxycert=<path-to-cert-file>
# By default we check for the secret in the default namespace. In case you have created the secret in some other namespace, please add the following variables in the sonobuoy run command: 
#azure-arc-platform.PROXY_CERT_NAMESPACE="<namespace of sonobuoy secret>"
#azure-arc-agent-cleanup.PROXY_CERT_NAMESPACE="namespace of sonobuoy secret"

# azure-arc-agent-cleanup plugin configurations
azure-arc-agent-cleanup.enable=
azure-arc-agent-cleanup.CLEANUP_TIMEOUT=

# plugins configuration ends
#dev-repository="test repository"
# end of file
